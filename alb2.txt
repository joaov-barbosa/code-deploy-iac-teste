resource "aws_lb" "app_alb" {
  name               = "codedeploy-alb"
  internal           = false
  load_balancer_type = "application"
  subnets            = var.subnet_ids
  security_groups    = [aws_security_group.app_sg.id]
}

resource "aws_lb_listener" "http" {
  load_balancer_arn = aws_lb.app_alb.arn
  port              = 80
  protocol          = "HTTP"

  default_action {
    type = "fixed-response"
    fixed_response {
      content_type = "text/plain"
      message_body = "Default response"
      status_code  = "200"
    }
  }
}
resource "aws_alb_listener_rule" "codedeploy" {
  listener_arn = aws_lb_listener.http.arn

  action {
    type = "forward"
    forward {
      target_group {
        arn    = aws_lb_target_group.tg_blue.arn
        weight = 100
      }

      target_group {
        arn    = aws_lb_target_group.tg_green.arn
        weight = 0
      }
    }
  }

  condition {
    path_pattern {
      values = ["/*"]
    }
  }

  priority = 100
}


resource "aws_lb_target_group" "tg_blue" {
  name     = "tg-blue"
  port     = 80
  protocol = "HTTP"
  vpc_id   = var.vpc_id
}

resource "aws_lb_target_group" "tg_green" {
  name     = "tg-green"
  port     = 80
  protocol = "HTTP"
  vpc_id   = var.vpc_id
}
